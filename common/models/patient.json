{
  "name": "Patient",
  "plural": "patients",
  "base": "PersistedModel",
  "idInjection": false,
  "options": {
    "validateUpsert": true
  },
  "properties": {
    "patId": {
      "type": "string",
      "id": "true",
      "required": true,
      "primary": "true"
    },
    "firstname": {
      "type": "string"
    },
    "lastname": {
      "type": "string"
    },
    "birthdate": {
      "type": "date"
    },
    "linkedSensors": {
      "type": [
        "LinkedSensor"
      ],
      "default": []
    },
    "lastMeasurementEntry": {
      "type": "date"
    }
  },
  "validations": [],
  "relations": {
    "events": {
      "type": "hasMany",
      "model": "Event",
      "foreignKey": "",
      "options": {
        "nestRemoting": true,
        "disableInclude": true
      }
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$unauthenticated",
      "permission": "DENY"
    }
  ],
  "methods": {
    "withConnectedSensor": {
      "accepts": [],
      "returns": [
        {
          "type": "[Patient]",
          "root": true
        }
      ],
      "description": "Returns all patients that have at least one connected sensor at the moment.",
      "http": [
        {
          "path": "/withConnectedSensor",
          "verb": "get"
        }
      ]
    },
    "withConnectedSensorAt": {
      "accepts": [
        {
          "arg": "from",
          "type": "date"
        },
        {
          "arg": "to",
          "type": "date"
        }
      ],
      "returns": [
        {
          "type": "[Patient]",
          "root": true
        }
      ],
      "description": "Returns all patients that have at least one connected sensor during a given time interval.",
      "http": [
        {
          "path": "/withConnectedSensorAt",
          "verb": "get"
        }
      ]
    },
    "orderByLastEntry": {
      "accepts": [],
      "returns": [
        {
          "type": "[Patient]",
          "root": true
        }
      ],
      "description": "Returns all patients that have at least one connected sensor during a given time interval.",
      "http": [
        {
          "path": "/orderByLastEntry",
          "verb": "get"
        }
      ]
    },
    "linkSensor": {
      "accepts": [
        {
          "arg":"id",
          "type":"string"
        },
        {
          "arg":"sensorIdentifier",
          "type":"string",
          "required":true
        },
        {
          "arg":"date",
          "type":"date"
        },
        {
          "arg":"altPatId",
          "type":"string"
        }
      ],
      "returns": [
        {
          "type":"LinkedSensor",
          "root":"true"
        }
      ],
      "description": "Links a new sensor to a patient",
      "http": [
        {
          "path": "/:id/linkSensor",
          "verb": "post"
        }
      ]
    },
    "unlinkSensor": {
      "accepts": [
        {
          "arg":"id",
          "type":"string"
        },
        {
          "arg":"sensorIdentifier",
          "type":"string",
          "required":true
        },
        {
          "arg":"date",
          "type":"date"
        }
      ],
      "returns": [
        {
          "type":"LinkedSensor",
          "root":"true"
        }
      ],
      "description": "Unlinks a sensor from a patient",
      "http": [
        {
          "path": "/:id/unlinkSensor",
          "verb": "post"
        }
      ]
    },
    "getMeasurements": {
      "accepts": [
        {
          "arg":"id",
          "type":"string"
        },
        {
          "arg":"from",
          "type":"date",
          "required":true
        },
        {
          "arg":"to",
          "type":"date"
        },
        {
          "arg":"readings",
          "type":[
            "Reading"
          ]
        }
      ],
      "returns": [
        {
          "type":[
            "MeasuredData"
          ],
          "root":"true"
        }
      ],
      "description": "Returns the measured data from a patient during a given time period. Can be filtered to return only selected readings.",
      "http": [
        {
          "path": "/:id/measurements",
          "verb": "get"
        }
      ]
    },
    "measurements": {
      "accepts": [
        {
          "arg":"id",
          "type":"string"
        },
        {
          "arg":"values",
          "type":[
            "object"
          ],
          "required":"true",
          "description":"Should contain the individual measured values as JSON objects in the folowing format: </br> {'timestamp':'', </br> 'value':''}"
        },
        {
          "arg":"sensorIdentifier",
          "type":"string",
          "required":true
        },
        {
          "arg":"reading",
          "type":"Reading",
          "required":true
        }
      ],
      "returns": [
        {
          "type":[
            "MeasuredData"
          ],
          "root":"true"
        }
      ],
      "description": "Saves measured data to a patient",
      "http": [
        {
          "path": "/:id/measurements",
          "verb": "post"
        }
      ]
    }
  }
}
